from celery import shared_task
from telebot import types

from bot.config import master_bot, moderator_bot, organization_bot
from src.models import Master, Organization, Moderator


def callback_verify_true_organization(organization_id: int) -> str:
    return f"organization_verify_true_{organization_id}"


def callback_verify_false_organization(organization_id:int) -> str:
    return f"organization_verify_false_{organization_id}"


def get_moderator_for_send_message():
    return Moderator.objects.first()


@shared_task
def send_message_telegram_on_master(
        master_id: int,
        client_phone_number: str,
        booking_date: str,
        booking_time: str,
):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ú–∞—Å—Ç–µ—Ä—É –æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏
    """
    master = Master.objects.get(id=master_id)

    text = (f"–£ –≤–∞—Å –Ω–æ–≤–∞—è –±—Ä–æ–Ω—å\n"
            f"–ö–ª–∏–µ–Ω—Ç: {client_phone_number}\n"
            f"–î–∞—Ç–∞: {booking_date}\n"
            f"–í—Ä–µ–º—è: {booking_time}")

    master_bot.send_message(
        chat_id=master.telegram_id,
        text=text
    )


@shared_task
def send_message_on_moderator_about_organization(
        organization_id: int
):
    organization = Organization.objects.get(pk=organization_id)
    moderator = get_moderator_for_send_message()

    message = f"""–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é!üü©üü©üü©
–ù–∞–∑–≤–∞–Ω–∏–µ: {organization.title}
–ê–¥—Ä–µ—Å: {organization.address}
–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {organization.contact_phone}
–¢–∏–ø –æ–≥—Ä–∞–Ω–∏–∑–∞—Ü–∏–∏: {organization.organization_type.title}
–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è: {organization.time_begin}
–ö–æ–Ω–µ—Ü —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è: {organization.time_end}\n"""

    moderator_inline_markup = types.InlineKeyboardMarkup()
    verify_true_button = types.InlineKeyboardButton(
        '‚úÖ –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å',
        callback_data=callback_verify_true_organization(organization_id),
    )
    verify_false_button = types.InlineKeyboardButton(
        '‚ùå –ù–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å',
        callback_data=callback_verify_false_organization(organization_id)
    )
    moderator_inline_markup.add(verify_true_button)
    moderator_inline_markup.add(verify_false_button)
    print(moderator.telegram_id, message)
    moderator_bot.send_message(
        chat_id=moderator.telegram_id,
        text=message,
        reply_markup=moderator_inline_markup,
    )


@shared_task()
def send_is_verified_organization(
        organization_id: int,
        is_verify: bool,
):
    organization = Organization.objects.get(pk=organization_id)
    if is_verify:
        message = """–•–æ—Ä–æ—à–∞—è –Ω–æ–≤–æ—Å—Ç—å! ‚ùáÔ∏è‚ùáÔ∏è‚ùáÔ∏è
–í–∞—à–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –±—ã–ª–∞ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–Ω–∞.
–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å –º–∞—Å—Ç–µ—Ä–æ–≤ –∏ —É—Å–ª—É–≥.
        """
        organization_menu_markup = types.ReplyKeyboardMarkup()

        master_list = types.KeyboardButton("üìÉ –°–ø–∏—Å–æ–∫ –º–∞—Å—Ç–µ—Ä–æ–≤")
        client_list = types.KeyboardButton('üë• –°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤')
        add_master = types.KeyboardButton('‚ûï –î–æ–±–∞–≤–∏—Ç—å –º–∞—Å—Ç–µ—Ä–∞')
        add_service = types.KeyboardButton('‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É')

        organization_menu_markup.add(master_list)
        organization_menu_markup.add(client_list)
        organization_menu_markup.add(add_master)
        organization_menu_markup.add(add_service)

        organization_bot.send_message(
            chat_id=organization.telegram_id,
            text=message,
            reply_markup=organization_menu_markup
        )
    else:
        message = (f'–í–∞—à–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é!‚ÄºÔ∏è\n'
                    '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –µ—â–µ —Ä–∞–∑ - /start')
        
        organization_bot.send_message(
            chat_id=organization.telegram_id,
            text=message,
        )
