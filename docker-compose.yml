version: '3'

services:
  # Redis

  db:
    image: postgres:14-alpine
    container_name: db_develop
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    network_mode: host

  redis:
    image: 'redis:alpine'
    restart: always
    command: redis-server
    container_name: 'Redis'
    volumes:
      - redis:/data
    network_mode: host
  # Django
  app:
    build: .
    restart: always
    container_name: 'Backend'
    command: /bin/bash -c "poetry run python manage.py collectstatic --noinput && poetry run python manage.py migrate && poetry run uvicorn config.asgi:application --host 0.0.0.0 --port 8000 --workers 4"
    volumes:
      - .:/app
      - static:/app/static
      - media:/app/media
    env_file:
      - .env
    depends_on:
      - redis
      - db
    ports:
      - 8000:8000
    network_mode: host
  # Celery
  celery:
    build: .
    command:  celery -A config worker -l info
    env_file:
      - .env
    depends_on:
      - app
      - redis
    restart: always
    volumes:
      - static:/app/static
      - media:/app/media
    network_mode: host
  # Nginx
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.template:/etc/nginx/conf.d/default.conf.template
      - /etc/letsencrypt:/etc/letsencrypt
      - /home/www:/home/www
      - static:/app/static
      - media:/app/media
    command: bash -c "envsubst '$${HOST}' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    env_file:
      - .env
    environment:
      - HOST=${HOST}
    depends_on:
      - app
    network_mode: host

volumes:
  static:
  media:
  redis:
  pgdata:

