services:
  redis:
    image: 'redis:alpine'
    restart: always
    command: redis-server
    container_name: 'Redis'
    volumes:
      - redis:/data
    networks:
      - net
  app:
    build: .
    restart: always
    container_name: 'Backend'
    command: poetry run uvicorn config.asgi:application --host 0.0.0.0 --port 8000 --workers 4
    volumes:
      - ./app:/app
      - static:/app/static
      - media:/app/media
    env_file:
      - .env
    depends_on:
      - redis
    ports:
      - 8000:8000
    networks:
      - net
  migrate:
    build: .
    command: poetry run python manage.py migrate
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - net
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alerts.yml:/etc/prometheus/alerts.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  loki:
    image: grafana/loki:2.8.4  
    ports:
      - "3100:3100"
    restart: unless-stopped
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/local-config.yaml

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
      - loki

  collectstatic:
    build: .
    networks:
      - net
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static:/app/static
      - media:/app/media
      - ./app/nginx/develop.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - net

volumes:
  static:
  media:
  redis:
  grafana-storage:

networks:
  net:
    driver: bridge
